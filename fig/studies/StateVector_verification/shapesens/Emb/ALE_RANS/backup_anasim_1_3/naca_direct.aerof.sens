under Problem {
  Type = SensitivityAnalysis;
  //Type = Steady;
  Mode = Dimensional;
  Framework = Embedded;
}

under Input {
  GeometryPrefix = "../../../mesh/sower/fluid_sowered";
  EmbeddedSurface = "../../../mesh/runmesh/embedded_surface.top";
  Solution = "./rst/naca_steady.sol";
  ShapeDerivative = "./sdesign/naca.der";
}

under Output {
  under Postpro {
    Prefix = "";
    LiftandDragSensitivity         = "./results/naca_direct_sens.liftdrag";
    SpatialResidualSensitivity     = "./results/SpatialResidualSensitivity_direct";
    SpatialResidualNormSensitivity = "./results/SpatialResidualNormSensitivity_direct";
    StateVectorSensitivity   = "./results/StateVectorSensitivity_direct";
    DensitySensitivity       = "./results/DensitySensitivity_direct";
    MachSensitivity          = "./results/MachSensitivity_direct";
    PressureSensitivity      = "./results/PressureSensitivity_direct";
    MatchPressureSensitivity = "./results/MatchPressureSensitivity_direct";
    TemperatureSensitivity   = "./results/TemperatureSensitivity_direct";
    TotalPressureSensitivity = "./results/TotalPressureSensitivity_direct";
    NuTildeSensitivity       = "./results/NuTildeSensitivity_direct";
    //EddyViscositySensitivity = "./results/EddyViscositySensitivity_direct";
    VelocityNormSensitivity  = "./results/VelocityNormSensitivity_direct";
    VelocitySensitivity      = "./results/VelocitySensitivity_direct";
    DisplacementSensitivity  = "./results/MeshdispSensitivity_direct";
    ForceSensitivity         = "./results/naca_direct_sens.force";
    Frequency = 0;
  }
}

under SensitivityAnalysis {
  NewEmbDerivs = On;
  LinSolveRHS = "results/LinSolveRHS_direct";
  dFdS_final  = "results/dFdS_final_direct";
  Method = Direct;
  SensitivityComputation = Analytical;
  MatrixVectorProduct = FiniteDifference;
  SensitivityMesh = On;
  under LinearSolver {
    Type = Gmres;
    MaxIts = 500;
    KrylovVectors = 500;
    Eps = 1e-8;
    Output = "results/linearsolver_direct.txt";
    under Preconditioner { Type = Ras; Fill = 0; }
  }
}

/*//under ReferenceState {
//    Density = 0.45;
//    Mach = 0.5;
//    Temperature = 223.0;
//    Length = 1.0;
//}
*/

under MeshMotion {
  Type = Basic;
  Element = BallVertexSprings;
  Mode = Recursive;
  NumIncrements = 3;
  under Newton {
    MaxIts = 3;
    Eps = 0.01;
    under LinearSolver {
      Type = Cg;
      MaxIts = 5000;
      KrylovVectors = 100;
      Eps = 1e-12;
      under Preconditioner { Type = Jacobi; }
    }
  }
}

under Surfaces {
  under SurfaceData[8] {
    Nx = 0.0;
    Ny = 0.0;
    Nz = 1.0;
  }
}


under Equations {
  Type = NavierStokes;
  under FluidModel[0] {
    Fluid = PerfectGas;
    under GasModel {
      SpecificHeatRatio = 1.4;
      IdealGasConstant = 287.1;
    }
  }
  under ThermalConductivityModel {
    Type = ConstantPrandtl;
    Prandtl = 0.72;
  }
  under ViscosityModel {
    Type = Constant;
    DynamicViscosity = 1.7054e-02;
  }
  under TurbulenceClosure {
    Type = TurbulenceModel;
    under TurbulenceModel {
      Type = SpalartAllmaras;
    }
  }
}


under BoundaryConditions {
  under Inlet {
    Type    = External;
    Mach    = 0.3;
    Density = 0.45;
    Pressure = 30397.5;
    Alpha   = 0.0;
    Beta    = 6.0;
  }
}

under Space {
  under NavierStokes {
    Flux              = Roe;
    Reconstruction    = Constant;//Linear
    AdvectiveOperator = FiniteVolume;
    Limiter           = VanAlbada;
    Gradient          = LeastSquares;
    Beta              = 0.66666666667;
    Gamma             = 1.0;
  }
  under Boundaries {
    Type = StegerWarming;
  }
}

under Time  {
  Type = Implicit;
  MaxIts = 5000;
  Eps = 1.e-6;
  //EpsAbs = 1.e-6;
  CheckSolution=On;
  CheckVelocity=On;
  CheckPressure=On;
  CheckDensity=On;
  under CflLaw {
    Strategy = Residual;
    Cfl0 = 0.5;
    Cfl1 = 0.5;
    Cfl2 = 2.0;
    CflMax = 1.0e2;
    Ser = 0.7;
    AngleGrowth = 2.0;
    AngleZero = 0.2;
    DFTHistory = 8;
    FrequencyCutoff = 3;
    DFTGrowth = 1.4;
  }
  under Implicit {
    TurbulenceModelCoupling = Strong;
    MatrixVectorProduct = FiniteDifference;
    /*FiniteDifferenceOrder = SecondOrder;*/
    under Newton {
      MaxIts = 5;
      Eps = 1e-5;
      under LinearSolver {
        under NavierStokes {
          Type = Gmres;
          EpsFormula = Eisenstadt;
          MaxIts = 500;
          KrylovVectors = 500;
          Eps = 1e-3;
          Output = "results/linearsolver_sens.txt";
          under Preconditioner { Type = Ras; Fill = 0; }
        }
      }
    }
  }
}


under EmbeddedFramework {
    Intersector = PhysBAM;
    SurrogateSurface = EmbeddedSurface;
    RiemannNormal = Structure;
    ViscousInterfaceOrder = FirstOrder;
}

